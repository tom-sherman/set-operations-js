{"version":3,"file":"set-operations.js","sources":["../src/is-superset.js","../src/is-equal.js","../src/utils.js","../src/union.js","../src/is-mutually-exclusive.js","../src/difference.js","../src/intersection.js","../src/index.js"],"sourcesContent":["/**\n *\n * @param {Set} a\n * @param {Set} b\n * @param {boolean} [proper=false]\n */\nexport function isSuperset (a, b, proper = false) {\n  if (a.size < b.size) {\n    return false\n  }\n  if (proper && a.size === b.size) {\n    return false\n  }\n  for (const elem of b) {\n    if (!a.has(elem)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n *\n * @param {Set} a\n * @param {Set} b\n */\nexport function isProperSuperset (a, b) {\n  return isSuperset(a, b, true)\n}\n","import { isSuperset } from './is-superset'\n\n/**\n * Checks equality between two sets.\n * @param  {Set} a\n * @param  {Set} b\n */\nexport function isEqual (a, b) {\n  return a.size === b.size && isSuperset(a, b)\n}\n","/**\n * Flattens an array with depth of 1.\n * @param {Array} arr\n */\nexport function flatten (arr) {\n  return arr.reduce((acc, val) => acc.concat(val), [])\n}\n\n/**\n * Stringifies a set into the format:\n * Set(size) { val1, val2, ... }\n * @param {Set} set\n */\nexport function stringify (set) {\n  // TODO: Separate package\n  return `Set(${set.size}) {${[...set].map(stringifyElement).join(', ')}}`\n}\n\nfunction stringifyElement (element) {\n  if (typeof element === 'number') {\n    return element\n  } else if (element === null) {\n    return 'null'\n  } else if (typeof element === 'undefined') {\n    return 'undefined'\n  } else if (typeof element === 'string') {\n    return `\"${element}\"`\n  } else if (Array.isArray(element)) {\n    return `Array(${element.length})`\n  } else if (typeof element === 'function') {\n    return 'Fn'\n  } else {\n    return '{â€¦}'\n  }\n}\n","import { flatten } from './utils'\r\n\r\n/**\r\n *\r\n * @param  {...Set} sets\r\n */\r\nexport function union (...sets) {\r\n  // TODO: Test performance vs nested for;of loop vs reduce\r\n  return new Set(flatten(sets.map(set => [...set])))\r\n}\r\n","import { union } from './union'\n\n/**\n * Tests whether two or more sets are mutually exclusive.\n * @param  {...Set} sets Two or more Sets\n */\nexport function isMutuallyExclusive (...sets) {\n  // TODO: Test performance against intersection ie. A n B = {}\n  const sumSizes = sets.reduce((acc, set) => acc + set.size, 0)\n  const unionSize = union(...sets).size\n  return sumSizes === unionSize\n}\n","/**\n *\n * @param {Set} a\n * @param {Set} b\n */\nexport function difference (a, b) {\n  const difference = new Set(a)\n  for (const elem of b) {\n    difference.delete(elem)\n  }\n  return difference\n}\n","/**\n *\n * @param {Set} a\n * @param {Set} b\n */\nexport function intersect (a, b) {\n  const intersection = new Set()\n  for (const elem of b) {\n    if (a.has(elem)) {\n      intersection.add(elem)\n    }\n  }\n  return intersection\n}\n\n/**\n *\n * @param {Set} a\n * @param {Set} b\n * @param  {...Set} sets\n */\nexport function intersection (...sets) {\n  return sets.reduce(intersect, sets[0])\n}\n","import { isSuperset, isProperSuperset } from './is-superset'\nimport { isEqual } from './is-equal'\nimport { isMutuallyExclusive } from './is-mutually-exclusive'\n\nimport { difference } from './difference'\nimport { union } from './union'\nimport { intersect, intersection } from './intersection'\n\nimport { stringify } from './utils'\n\nexport default {\n  isSuperset,\n  isProperSuperset,\n  isEqual,\n  isMutuallyExclusive,\n  difference,\n  union,\n  intersect,\n  intersection,\n  stringify\n}\n"],"names":[],"mappings":";;;;;;EAAA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE;EAClD,EAAE,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;EACvB,IAAI,OAAO,KAAK;EAChB,GAAG;EACH,EAAE,IAAI,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;EACnC,IAAI,OAAO,KAAK;EAChB,GAAG;EACH,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,EAAE;EACxB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;EACtB,MAAM,OAAO,KAAK;EAClB,KAAK;EACL,GAAG;EACH,EAAE,OAAO,IAAI;EACb,CAAC;;EAED;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAE;EACxC,EAAE,OAAO,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAC/B,CAAC;;EC1BD;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;EAC/B,EAAE,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9C,CAAC;;ECTD;EACA;EACA;EACA;AACA,EAAO,SAAS,OAAO,EAAE,GAAG,EAAE;EAC9B,EAAE,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;EACtD,CAAC;;EAED;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,SAAS,EAAE,GAAG,EAAE;EAChC;EACA,EAAE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1E,CAAC;;EAED,SAAS,gBAAgB,EAAE,OAAO,EAAE;EACpC,EAAE,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;EACnC,IAAI,OAAO,OAAO;EAClB,GAAG,MAAM,IAAI,OAAO,KAAK,IAAI,EAAE;EAC/B,IAAI,OAAO,MAAM;EACjB,GAAG,MAAM,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;EAC7C,IAAI,OAAO,WAAW;EACtB,GAAG,MAAM,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;EAC1C,IAAI,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;EACzB,GAAG,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;EACrC,IAAI,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;EACrC,GAAG,MAAM,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;EAC5C,IAAI,OAAO,IAAI;EACf,GAAG,MAAM;EACT,IAAI,OAAO,KAAK;EAChB,GAAG;EACH,CAAC;;EChCD;EACA;EACA;EACA;AACA,EAAO,SAAS,KAAK,EAAE,GAAG,IAAI,EAAE;EAChC;EACA,EAAE,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC;;ECPD;EACA;EACA;EACA;AACA,EAAO,SAAS,mBAAmB,EAAE,GAAG,IAAI,EAAE;EAC9C;EACA,EAAE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,EAAC;EAC/D,EAAE,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,KAAI;EACvC,EAAE,OAAO,QAAQ,KAAK,SAAS;EAC/B,CAAC;;ECXD;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE;EAClC,EAAE,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,CAAC,EAAC;EAC/B,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,EAAE;EACxB,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,EAAC;EAC3B,GAAG;EACH,EAAE,OAAO,UAAU;EACnB,CAAC;;ECXD;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE;EACjC,EAAE,MAAM,YAAY,GAAG,IAAI,GAAG,GAAE;EAChC,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,EAAE;EACxB,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;EACrB,MAAM,YAAY,CAAC,GAAG,CAAC,IAAI,EAAC;EAC5B,KAAK;EACL,GAAG;EACH,EAAE,OAAO,YAAY;EACrB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,YAAY,EAAE,GAAG,IAAI,EAAE;EACvC,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;;ACbD,cAAe;EACf,EAAE,UAAU;EACZ,EAAE,gBAAgB;EAClB,EAAE,OAAO;EACT,EAAE,mBAAmB;EACrB,EAAE,UAAU;EACZ,EAAE,KAAK;EACP,EAAE,SAAS;EACX,EAAE,YAAY;EACd,EAAE,SAAS;EACX,CAAC;;;;;;;;"}